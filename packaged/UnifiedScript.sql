--------------------------------------------------------
--  File created - Monday-June-06-2016   
--------------------------------------------------------
DROP TABLE "DIMITRIJEJANKOV"."Account";
DROP TABLE "DIMITRIJEJANKOV"."Accountant User Group";
DROP TABLE "DIMITRIJEJANKOV"."BS Has COA";
DROP TABLE "DIMITRIJEJANKOV"."Business";
DROP TABLE "DIMITRIJEJANKOV"."Chart of Accounts";
DROP TABLE "DIMITRIJEJANKOV"."Journal Vaucher";
DROP TABLE "DIMITRIJEJANKOV"."Journal Vaucher Template";
DROP TABLE "DIMITRIJEJANKOV"."Journal Vaucher Template Entry";
DROP TABLE "DIMITRIJEJANKOV"."Software User";
DROP TABLE "DIMITRIJEJANKOV"."Vaucher Entry";
DROP TABLE "DIMITRIJEJANKOV"."Vaucher Entry Type";
DROP SEQUENCE "DIMITRIJEJANKOV"."JOURNAL_VAUCHER_SEQUENCER";
DROP SEQUENCE "DIMITRIJEJANKOV"."VAUCHER_ENTRY_SEQUENCER";
DROP PACKAGE "DIMITRIJEJANKOV"."PR_GL_PACKAGE";
DROP PACKAGE "DIMITRIJEJANKOV"."PR_INCOME_STATMENT_PACKAGE";
DROP PACKAGE "DIMITRIJEJANKOV"."PR_MAIN_PACKAGE";
DROP PACKAGE "DIMITRIJEJANKOV"."PR_NEXT_YEAR_PACKAGE";
DROP PACKAGE "DIMITRIJEJANKOV"."TG_PARENT_ACCOUNT_PACKAGE";
DROP PACKAGE BODY "DIMITRIJEJANKOV"."PR_GL_PACKAGE";
DROP PACKAGE BODY "DIMITRIJEJANKOV"."PR_MAIN_PACKAGE";
--------------------------------------------------------
--  DDL for Sequence JOURNAL_VAUCHER_SEQUENCER
--------------------------------------------------------

   CREATE SEQUENCE  "DIMITRIJEJANKOV"."JOURNAL_VAUCHER_SEQUENCER"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 30 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence VAUCHER_ENTRY_SEQUENCER
--------------------------------------------------------

   CREATE SEQUENCE  "DIMITRIJEJANKOV"."VAUCHER_ENTRY_SEQUENCER"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 30 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Table Account
--------------------------------------------------------

  CREATE TABLE "DIMITRIJEJANKOV"."Account" 
   (	"CA_ID" NUMBER(*,0), 
	"AC_ID" VARCHAR2(3 BYTE), 
	"AC_NAME" VARCHAR2(60 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table Accountant User Group
--------------------------------------------------------

  CREATE TABLE "DIMITRIJEJANKOV"."Accountant User Group" 
   (	"SUG_ID" NUMBER(*,0), 
	"SUG_NAME" VARCHAR2(60 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table BS Has COA
--------------------------------------------------------

  CREATE TABLE "DIMITRIJEJANKOV"."BS Has COA" 
   (	"CA_ID" NUMBER(*,0), 
	"BS_ID" NUMBER(*,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table Business
--------------------------------------------------------

  CREATE TABLE "DIMITRIJEJANKOV"."Business" 
   (	"BS_ID" NUMBER(*,0), 
	"SUG_ID" NUMBER(*,0), 
	"BS_NAME" VARCHAR2(60 BYTE), 
	"BS_MBR" VARCHAR2(60 BYTE), 
	"BS_PIB" VARCHAR2(60 BYTE), 
	"BS_ADDRESS" VARCHAR2(60 BYTE), 
	"BS_WEB_PAGE" VARCHAR2(200 BYTE), 
	"BS_EMAIL" VARCHAR2(60 BYTE), 
	"BS_TELEPHONE" VARCHAR2(60 BYTE), 
	"BS_FAX" VARCHAR2(60 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table Chart of Accounts
--------------------------------------------------------

  CREATE TABLE "DIMITRIJEJANKOV"."Chart of Accounts" 
   (	"CA_ID" NUMBER(*,0), 
	"CA_DESCRIPTION" VARCHAR2(2000 BYTE), 
	"CA_YEAR" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table Journal Vaucher
--------------------------------------------------------

  CREATE TABLE "DIMITRIJEJANKOV"."Journal Vaucher" 
   (	"JV_ID" NUMBER(*,0), 
	"CA_ID" NUMBER(*,0), 
	"SU_ID" NUMBER(*,0), 
	"JV_CODE" NUMBER(*,0), 
	"JV_DOCUMENT_NUMBER" NUMBER(*,0), 
	"JV_DATE_OF_RECORDING" DATE, 
	"JV_DATE_OF_CURRENCY" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table Journal Vaucher Template
--------------------------------------------------------

  CREATE TABLE "DIMITRIJEJANKOV"."Journal Vaucher Template" 
   (	"JVT_ID" NUMBER(*,0), 
	"BS_PART_ID" NUMBER(*,0), 
	"BS_ID" NUMBER(*,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table Journal Vaucher Template Entry
--------------------------------------------------------

  CREATE TABLE "DIMITRIJEJANKOV"."Journal Vaucher Template Entry" 
   (	"JVTE_ID" NUMBER(*,0), 
	"CA_ID" NUMBER(*,0), 
	"AC_ID" VARCHAR2(3 BYTE), 
	"JVT_ID" NUMBER(*,0), 
	"BS_ID" NUMBER(*,0), 
	"JVTE_DESCRIPTION" VARCHAR2(2000 BYTE), 
	"JVTE_DEBITS" NUMBER(7,4), 
	"JVTE_CREDITS" NUMBER(7,4)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table Software User
--------------------------------------------------------

  CREATE TABLE "DIMITRIJEJANKOV"."Software User" 
   (	"SU_ID" NUMBER(*,0), 
	"SUG_ID" NUMBER(*,0), 
	"SU_EMAIL" VARCHAR2(60 BYTE), 
	"SU_PASSWORD" VARCHAR2(60 BYTE), 
	"SU_TYPE" CHAR(1 BYTE), 
	"SU_NAME" VARCHAR2(60 BYTE), 
	"SU_LASTNAME" VARCHAR2(60 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table Vaucher Entry
--------------------------------------------------------

  CREATE TABLE "DIMITRIJEJANKOV"."Vaucher Entry" 
   (	"JVE_ID" NUMBER(*,0), 
	"JV_ID" NUMBER(*,0), 
	"SUG_ID" NUMBER(*,0), 
	"VET_ID" NUMBER(*,0), 
	"BS_ID" NUMBER(*,0), 
	"CA_ID" NUMBER(*,0), 
	"AC_ID" VARCHAR2(3 BYTE), 
	"JVE_DESCRIPTION" VARCHAR2(2000 BYTE), 
	"JVE_DEBITS" NUMBER(10,4), 
	"JVE_CREDITS" NUMBER(10,4)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table Vaucher Entry Type
--------------------------------------------------------

  CREATE TABLE "DIMITRIJEJANKOV"."Vaucher Entry Type" 
   (	"SUG_ID" NUMBER(*,0), 
	"VET_ID" NUMBER(*,0), 
	"VET_NAME" VARCHAR2(60 BYTE), 
	"VET_DESCRIPTION" VARCHAR2(2000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
REM INSERTING into DIMITRIJEJANKOV."Account"
SET DEFINE OFF;
Insert into DIMITRIJEJANKOV."Account" (CA_ID,AC_ID,AC_NAME) values (1,'51','Prihod 1');
Insert into DIMITRIJEJANKOV."Account" (CA_ID,AC_ID,AC_NAME) values (1,'62','Dug 1');
Insert into DIMITRIJEJANKOV."Account" (CA_ID,AC_ID,AC_NAME) values (2,'51','Prihod 1');
Insert into DIMITRIJEJANKOV."Account" (CA_ID,AC_ID,AC_NAME) values (2,'62','Dug 1');
Insert into DIMITRIJEJANKOV."Account" (CA_ID,AC_ID,AC_NAME) values (1,'311','Pod neuplaceni');
Insert into DIMITRIJEJANKOV."Account" (CA_ID,AC_ID,AC_NAME) values (1,'511','Pod Prihod 1');
Insert into DIMITRIJEJANKOV."Account" (CA_ID,AC_ID,AC_NAME) values (1,'00','Neplaceni');
Insert into DIMITRIJEJANKOV."Account" (CA_ID,AC_ID,AC_NAME) values (1,'31','Neplaceni 2');
Insert into DIMITRIJEJANKOV."Account" (CA_ID,AC_ID,AC_NAME) values (1,'35','asd');
Insert into DIMITRIJEJANKOV."Account" (CA_ID,AC_ID,AC_NAME) values (1,'352','asd2');
Insert into DIMITRIJEJANKOV."Account" (CA_ID,AC_ID,AC_NAME) values (1,'351','asd1');
REM INSERTING into DIMITRIJEJANKOV."Accountant User Group"
SET DEFINE OFF;
Insert into DIMITRIJEJANKOV."Accountant User Group" (SUG_ID,SUG_NAME) values (1,'Grupa 1');
Insert into DIMITRIJEJANKOV."Accountant User Group" (SUG_ID,SUG_NAME) values (2,'Grupa 2');
REM INSERTING into DIMITRIJEJANKOV."BS Has COA"
SET DEFINE OFF;
Insert into DIMITRIJEJANKOV."BS Has COA" (CA_ID,BS_ID) values (1,1);
Insert into DIMITRIJEJANKOV."BS Has COA" (CA_ID,BS_ID) values (2,1);
REM INSERTING into DIMITRIJEJANKOV."Business"
SET DEFINE OFF;
Insert into DIMITRIJEJANKOV."Business" (BS_ID,SUG_ID,BS_NAME,BS_MBR,BS_PIB,BS_ADDRESS,BS_WEB_PAGE,BS_EMAIL,BS_TELEPHONE,BS_FAX) values (1,1,'Biznis 1','123','123','xyz','xyz','mail','9998','9999');
Insert into DIMITRIJEJANKOV."Business" (BS_ID,SUG_ID,BS_NAME,BS_MBR,BS_PIB,BS_ADDRESS,BS_WEB_PAGE,BS_EMAIL,BS_TELEPHONE,BS_FAX) values (2,1,'Biznis 2','321','321','qwe','qwe','mail2','8888','8889');
REM INSERTING into DIMITRIJEJANKOV."Chart of Accounts"
SET DEFINE OFF;
Insert into DIMITRIJEJANKOV."Chart of Accounts" (CA_ID,CA_DESCRIPTION,CA_YEAR) values (1,'Chart of Accounts 1',to_date('08-JUN-16','DD-MON-RR'));
Insert into DIMITRIJEJANKOV."Chart of Accounts" (CA_ID,CA_DESCRIPTION,CA_YEAR) values (2,'Chart of Accounts 2',to_date('16-JUN-16','DD-MON-RR'));
Insert into DIMITRIJEJANKOV."Chart of Accounts" (CA_ID,CA_DESCRIPTION,CA_YEAR) values (4,'Chart of Accounts 1',to_date('09-JUN-16','DD-MON-RR'));
REM INSERTING into DIMITRIJEJANKOV."Journal Vaucher"
SET DEFINE OFF;
Insert into DIMITRIJEJANKOV."Journal Vaucher" (JV_ID,CA_ID,SU_ID,JV_CODE,JV_DOCUMENT_NUMBER,JV_DATE_OF_RECORDING,JV_DATE_OF_CURRENCY) values (1,1,1,23,23,to_date('02-JUN-16','DD-MON-RR'),to_date('10-JUN-16','DD-MON-RR'));
REM INSERTING into DIMITRIJEJANKOV."Journal Vaucher Template"
SET DEFINE OFF;
Insert into DIMITRIJEJANKOV."Journal Vaucher Template" (JVT_ID,BS_PART_ID,BS_ID) values (1,2,1);
REM INSERTING into DIMITRIJEJANKOV."Journal Vaucher Template Entry"
SET DEFINE OFF;
Insert into DIMITRIJEJANKOV."Journal Vaucher Template Entry" (JVTE_ID,CA_ID,AC_ID,JVT_ID,BS_ID,JVTE_DESCRIPTION,JVTE_DEBITS,JVTE_CREDITS) values (1,2,'51',1,1,'xyz',10,0);
Insert into DIMITRIJEJANKOV."Journal Vaucher Template Entry" (JVTE_ID,CA_ID,AC_ID,JVT_ID,BS_ID,JVTE_DESCRIPTION,JVTE_DEBITS,JVTE_CREDITS) values (2,2,'62',1,2,'qwe',0,10);
REM INSERTING into DIMITRIJEJANKOV."Software User"
SET DEFINE OFF;
Insert into DIMITRIJEJANKOV."Software User" (SU_ID,SUG_ID,SU_EMAIL,SU_PASSWORD,SU_TYPE,SU_NAME,SU_LASTNAME) values (1,1,'dimitrije@gmail.com','xyz','U','Dimitrije','Jankov');
Insert into DIMITRIJEJANKOV."Software User" (SU_ID,SUG_ID,SU_EMAIL,SU_PASSWORD,SU_TYPE,SU_NAME,SU_LASTNAME) values (2,2,'vladimir@gmai.com','qwe','U','Vladimir','Jankov');
REM INSERTING into DIMITRIJEJANKOV."Vaucher Entry"
SET DEFINE OFF;
Insert into DIMITRIJEJANKOV."Vaucher Entry" (JVE_ID,JV_ID,SUG_ID,VET_ID,BS_ID,CA_ID,AC_ID,JVE_DESCRIPTION,JVE_DEBITS,JVE_CREDITS) values (1,1,1,null,1,1,'35','xyz',10,0);
Insert into DIMITRIJEJANKOV."Vaucher Entry" (JVE_ID,JV_ID,SUG_ID,VET_ID,BS_ID,CA_ID,AC_ID,JVE_DESCRIPTION,JVE_DEBITS,JVE_CREDITS) values (2,1,1,null,1,1,'35','qwe',0,10);
REM INSERTING into DIMITRIJEJANKOV."Vaucher Entry Type"
SET DEFINE OFF;
--------------------------------------------------------
--  DDL for Index ACCOUNT_FOR_TEMPLATE_ENTRY_FK
--------------------------------------------------------

  CREATE INDEX "DIMITRIJEJANKOV"."ACCOUNT_FOR_TEMPLATE_ENTRY_FK" ON "DIMITRIJEJANKOV"."Journal Vaucher Template Entry" ("CA_ID", "AC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index BELONGS_TO_USERGROUP_FK
--------------------------------------------------------

  CREATE INDEX "DIMITRIJEJANKOV"."BELONGS_TO_USERGROUP_FK" ON "DIMITRIJEJANKOV"."Software User" ("SUG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index BP_FOR_TE_FK
--------------------------------------------------------

  CREATE INDEX "DIMITRIJEJANKOV"."BP_FOR_TE_FK" ON "DIMITRIJEJANKOV"."Journal Vaucher Template Entry" ("BS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index BUSINESS_HAS_VAUCHERS_FK
--------------------------------------------------------

  CREATE INDEX "DIMITRIJEJANKOV"."BUSINESS_HAS_VAUCHERS_FK" ON "DIMITRIJEJANKOV"."Journal Vaucher" ("CA_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index ENTRY_FOR_ACCOUNT_FK
--------------------------------------------------------

  CREATE INDEX "DIMITRIJEJANKOV"."ENTRY_FOR_ACCOUNT_FK" ON "DIMITRIJEJANKOV"."Vaucher Entry" ("CA_ID", "AC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index ENTRY_FOR_BUSINESS_PARTNER_FK
--------------------------------------------------------

  CREATE INDEX "DIMITRIJEJANKOV"."ENTRY_FOR_BUSINESS_PARTNER_FK" ON "DIMITRIJEJANKOV"."Vaucher Entry" ("BS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index ENTRY_IS_OF_TYPE_FK
--------------------------------------------------------

  CREATE INDEX "DIMITRIJEJANKOV"."ENTRY_IS_OF_TYPE_FK" ON "DIMITRIJEJANKOV"."Vaucher Entry" ("SUG_ID", "VET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index GROUP_HAS_BUSINESS_FK
--------------------------------------------------------

  CREATE INDEX "DIMITRIJEJANKOV"."GROUP_HAS_BUSINESS_FK" ON "DIMITRIJEJANKOV"."Business" ("SUG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index GROUP_HAS_VET_FK
--------------------------------------------------------

  CREATE INDEX "DIMITRIJEJANKOV"."GROUP_HAS_VET_FK" ON "DIMITRIJEJANKOV"."Vaucher Entry Type" ("SUG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index HAS_AN_ACCOUNT_FK
--------------------------------------------------------

  CREATE INDEX "DIMITRIJEJANKOV"."HAS_AN_ACCOUNT_FK" ON "DIMITRIJEJANKOV"."Account" ("CA_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index HAS_TEMPLATES_FK
--------------------------------------------------------

  CREATE INDEX "DIMITRIJEJANKOV"."HAS_TEMPLATES_FK" ON "DIMITRIJEJANKOV"."Journal Vaucher Template" ("BS_PART_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index JOURNAL_VAUCHER_HAS_ENTRIES_FK
--------------------------------------------------------

  CREATE INDEX "DIMITRIJEJANKOV"."JOURNAL_VAUCHER_HAS_ENTRIES_FK" ON "DIMITRIJEJANKOV"."Vaucher Entry" ("JV_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_ACCOUNT
--------------------------------------------------------

  CREATE UNIQUE INDEX "DIMITRIJEJANKOV"."PK_ACCOUNT" ON "DIMITRIJEJANKOV"."Account" ("CA_ID", "AC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_ACCOUNTANT USER GROUP
--------------------------------------------------------

  CREATE UNIQUE INDEX "DIMITRIJEJANKOV"."PK_ACCOUNTANT USER GROUP" ON "DIMITRIJEJANKOV"."Accountant User Group" ("SUG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_BUSINESS
--------------------------------------------------------

  CREATE UNIQUE INDEX "DIMITRIJEJANKOV"."PK_BUSINESS" ON "DIMITRIJEJANKOV"."Business" ("BS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_CHART OF ACCOUNTS
--------------------------------------------------------

  CREATE UNIQUE INDEX "DIMITRIJEJANKOV"."PK_CHART OF ACCOUNTS" ON "DIMITRIJEJANKOV"."Chart of Accounts" ("CA_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_JOURNAL VAUCHER
--------------------------------------------------------

  CREATE UNIQUE INDEX "DIMITRIJEJANKOV"."PK_JOURNAL VAUCHER" ON "DIMITRIJEJANKOV"."Journal Vaucher" ("JV_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_JOURNAL VAUCHER TEMPLATE
--------------------------------------------------------

  CREATE UNIQUE INDEX "DIMITRIJEJANKOV"."PK_JOURNAL VAUCHER TEMPLATE" ON "DIMITRIJEJANKOV"."Journal Vaucher Template" ("JVT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_JOURNAL VAUCHER TEMPLATE EN
--------------------------------------------------------

  CREATE UNIQUE INDEX "DIMITRIJEJANKOV"."PK_JOURNAL VAUCHER TEMPLATE EN" ON "DIMITRIJEJANKOV"."Journal Vaucher Template Entry" ("JVTE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_SOFTWARE USER
--------------------------------------------------------

  CREATE UNIQUE INDEX "DIMITRIJEJANKOV"."PK_SOFTWARE USER" ON "DIMITRIJEJANKOV"."Software User" ("SU_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_VAUCHER ENTRY
--------------------------------------------------------

  CREATE UNIQUE INDEX "DIMITRIJEJANKOV"."PK_VAUCHER ENTRY" ON "DIMITRIJEJANKOV"."Vaucher Entry" ("JVE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_VAUCHER ENTRY TYPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "DIMITRIJEJANKOV"."PK_VAUCHER ENTRY TYPE" ON "DIMITRIJEJANKOV"."Vaucher Entry Type" ("SUG_ID", "VET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index TMP_FOR_BP_FK
--------------------------------------------------------

  CREATE INDEX "DIMITRIJEJANKOV"."TMP_FOR_BP_FK" ON "DIMITRIJEJANKOV"."Journal Vaucher Template" ("BS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index VAUCHER_TEMPLATE_HAS_FK
--------------------------------------------------------

  CREATE INDEX "DIMITRIJEJANKOV"."VAUCHER_TEMPLATE_HAS_FK" ON "DIMITRIJEJANKOV"."Journal Vaucher Template Entry" ("JVT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  Constraints for Table Account
--------------------------------------------------------

  ALTER TABLE "DIMITRIJEJANKOV"."Account" ADD CONSTRAINT "PK_ACCOUNT" PRIMARY KEY ("CA_ID", "AC_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "DIMITRIJEJANKOV"."Account" MODIFY ("AC_NAME" NOT NULL ENABLE);
  ALTER TABLE "DIMITRIJEJANKOV"."Account" MODIFY ("AC_ID" NOT NULL ENABLE);
  ALTER TABLE "DIMITRIJEJANKOV"."Account" MODIFY ("CA_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table Accountant User Group
--------------------------------------------------------

  ALTER TABLE "DIMITRIJEJANKOV"."Accountant User Group" ADD CONSTRAINT "PK_ACCOUNTANT USER GROUP" PRIMARY KEY ("SUG_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "DIMITRIJEJANKOV"."Accountant User Group" MODIFY ("SUG_NAME" NOT NULL ENABLE);
  ALTER TABLE "DIMITRIJEJANKOV"."Accountant User Group" MODIFY ("SUG_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table Business
--------------------------------------------------------

  ALTER TABLE "DIMITRIJEJANKOV"."Business" ADD CONSTRAINT "PK_BUSINESS" PRIMARY KEY ("BS_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "DIMITRIJEJANKOV"."Business" MODIFY ("BS_PIB" NOT NULL ENABLE);
  ALTER TABLE "DIMITRIJEJANKOV"."Business" MODIFY ("BS_MBR" NOT NULL ENABLE);
  ALTER TABLE "DIMITRIJEJANKOV"."Business" MODIFY ("BS_NAME" NOT NULL ENABLE);
  ALTER TABLE "DIMITRIJEJANKOV"."Business" MODIFY ("SUG_ID" NOT NULL ENABLE);
  ALTER TABLE "DIMITRIJEJANKOV"."Business" MODIFY ("BS_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table Chart of Accounts
--------------------------------------------------------

  ALTER TABLE "DIMITRIJEJANKOV"."Chart of Accounts" ADD CONSTRAINT "PK_CHART OF ACCOUNTS" PRIMARY KEY ("CA_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "DIMITRIJEJANKOV"."Chart of Accounts" MODIFY ("CA_YEAR" NOT NULL ENABLE);
  ALTER TABLE "DIMITRIJEJANKOV"."Chart of Accounts" MODIFY ("CA_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table Journal Vaucher
--------------------------------------------------------

  ALTER TABLE "DIMITRIJEJANKOV"."Journal Vaucher" ADD CONSTRAINT "PK_JOURNAL VAUCHER" PRIMARY KEY ("JV_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "DIMITRIJEJANKOV"."Journal Vaucher" MODIFY ("JV_DATE_OF_CURRENCY" NOT NULL ENABLE);
  ALTER TABLE "DIMITRIJEJANKOV"."Journal Vaucher" MODIFY ("JV_DATE_OF_RECORDING" NOT NULL ENABLE);
  ALTER TABLE "DIMITRIJEJANKOV"."Journal Vaucher" MODIFY ("JV_DOCUMENT_NUMBER" NOT NULL ENABLE);
  ALTER TABLE "DIMITRIJEJANKOV"."Journal Vaucher" MODIFY ("JV_CODE" NOT NULL ENABLE);
  ALTER TABLE "DIMITRIJEJANKOV"."Journal Vaucher" MODIFY ("CA_ID" NOT NULL ENABLE);
  ALTER TABLE "DIMITRIJEJANKOV"."Journal Vaucher" MODIFY ("JV_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table Journal Vaucher Template
--------------------------------------------------------

  ALTER TABLE "DIMITRIJEJANKOV"."Journal Vaucher Template" ADD CONSTRAINT "PK_JOURNAL VAUCHER TEMPLATE" PRIMARY KEY ("JVT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "DIMITRIJEJANKOV"."Journal Vaucher Template" MODIFY ("BS_ID" NOT NULL ENABLE);
  ALTER TABLE "DIMITRIJEJANKOV"."Journal Vaucher Template" MODIFY ("JVT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table Journal Vaucher Template Entry
--------------------------------------------------------

  ALTER TABLE "DIMITRIJEJANKOV"."Journal Vaucher Template Entry" ADD CONSTRAINT "PK_JOURNAL VAUCHER TEMPLATE EN" PRIMARY KEY ("JVTE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "DIMITRIJEJANKOV"."Journal Vaucher Template Entry" MODIFY ("JVTE_CREDITS" NOT NULL ENABLE);
  ALTER TABLE "DIMITRIJEJANKOV"."Journal Vaucher Template Entry" MODIFY ("JVTE_DEBITS" NOT NULL ENABLE);
  ALTER TABLE "DIMITRIJEJANKOV"."Journal Vaucher Template Entry" MODIFY ("JVT_ID" NOT NULL ENABLE);
  ALTER TABLE "DIMITRIJEJANKOV"."Journal Vaucher Template Entry" MODIFY ("AC_ID" NOT NULL ENABLE);
  ALTER TABLE "DIMITRIJEJANKOV"."Journal Vaucher Template Entry" MODIFY ("CA_ID" NOT NULL ENABLE);
  ALTER TABLE "DIMITRIJEJANKOV"."Journal Vaucher Template Entry" MODIFY ("JVTE_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table Software User
--------------------------------------------------------

  ALTER TABLE "DIMITRIJEJANKOV"."Software User" ADD CONSTRAINT "PK_SOFTWARE USER" PRIMARY KEY ("SU_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "DIMITRIJEJANKOV"."Software User" MODIFY ("SU_LASTNAME" NOT NULL ENABLE);
  ALTER TABLE "DIMITRIJEJANKOV"."Software User" MODIFY ("SU_NAME" NOT NULL ENABLE);
  ALTER TABLE "DIMITRIJEJANKOV"."Software User" MODIFY ("SU_TYPE" NOT NULL ENABLE);
  ALTER TABLE "DIMITRIJEJANKOV"."Software User" MODIFY ("SU_PASSWORD" NOT NULL ENABLE);
  ALTER TABLE "DIMITRIJEJANKOV"."Software User" MODIFY ("SU_EMAIL" NOT NULL ENABLE);
  ALTER TABLE "DIMITRIJEJANKOV"."Software User" MODIFY ("SU_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table Vaucher Entry
--------------------------------------------------------

  ALTER TABLE "DIMITRIJEJANKOV"."Vaucher Entry" ADD CONSTRAINT "PK_VAUCHER ENTRY" PRIMARY KEY ("JVE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "DIMITRIJEJANKOV"."Vaucher Entry" MODIFY ("JVE_CREDITS" NOT NULL ENABLE);
  ALTER TABLE "DIMITRIJEJANKOV"."Vaucher Entry" MODIFY ("JVE_DEBITS" NOT NULL ENABLE);
  ALTER TABLE "DIMITRIJEJANKOV"."Vaucher Entry" MODIFY ("AC_ID" NOT NULL ENABLE);
  ALTER TABLE "DIMITRIJEJANKOV"."Vaucher Entry" MODIFY ("CA_ID" NOT NULL ENABLE);
  ALTER TABLE "DIMITRIJEJANKOV"."Vaucher Entry" MODIFY ("BS_ID" NOT NULL ENABLE);
  ALTER TABLE "DIMITRIJEJANKOV"."Vaucher Entry" MODIFY ("JV_ID" NOT NULL ENABLE);
  ALTER TABLE "DIMITRIJEJANKOV"."Vaucher Entry" MODIFY ("JVE_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table Vaucher Entry Type
--------------------------------------------------------

  ALTER TABLE "DIMITRIJEJANKOV"."Vaucher Entry Type" ADD CONSTRAINT "PK_VAUCHER ENTRY TYPE" PRIMARY KEY ("SUG_ID", "VET_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "DIMITRIJEJANKOV"."Vaucher Entry Type" MODIFY ("VET_NAME" NOT NULL ENABLE);
  ALTER TABLE "DIMITRIJEJANKOV"."Vaucher Entry Type" MODIFY ("VET_ID" NOT NULL ENABLE);
  ALTER TABLE "DIMITRIJEJANKOV"."Vaucher Entry Type" MODIFY ("SUG_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Ref Constraints for Table Account
--------------------------------------------------------

  ALTER TABLE "DIMITRIJEJANKOV"."Account" ADD CONSTRAINT "FK_ACCOUNT_HAS AN AC_CHART OF" FOREIGN KEY ("CA_ID")
	  REFERENCES "DIMITRIJEJANKOV"."Chart of Accounts" ("CA_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table BS Has COA
--------------------------------------------------------

  ALTER TABLE "DIMITRIJEJANKOV"."BS Has COA" ADD CONSTRAINT "FK_BS HAS C_BUSSINESS_CHART OF" FOREIGN KEY ("CA_ID")
	  REFERENCES "DIMITRIJEJANKOV"."Chart of Accounts" ("CA_ID") ENABLE;
  ALTER TABLE "DIMITRIJEJANKOV"."BS Has COA" ADD CONSTRAINT "FK_BS HAS C_REFERENCE_BUSINESS" FOREIGN KEY ("BS_ID")
	  REFERENCES "DIMITRIJEJANKOV"."Business" ("BS_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table Business
--------------------------------------------------------

  ALTER TABLE "DIMITRIJEJANKOV"."Business" ADD CONSTRAINT "FK_BUSINESS_GROUP HAS_ACCOUNTA" FOREIGN KEY ("SUG_ID")
	  REFERENCES "DIMITRIJEJANKOV"."Accountant User Group" ("SUG_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table Journal Vaucher
--------------------------------------------------------

  ALTER TABLE "DIMITRIJEJANKOV"."Journal Vaucher" ADD CONSTRAINT "FK_JOURNAL _BUSINESS _CHART OF" FOREIGN KEY ("CA_ID")
	  REFERENCES "DIMITRIJEJANKOV"."Chart of Accounts" ("CA_ID") ENABLE;
  ALTER TABLE "DIMITRIJEJANKOV"."Journal Vaucher" ADD CONSTRAINT "FK_JOURNAL _REFERENCE_SOFTWARE" FOREIGN KEY ("SU_ID")
	  REFERENCES "DIMITRIJEJANKOV"."Software User" ("SU_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table Journal Vaucher Template
--------------------------------------------------------

  ALTER TABLE "DIMITRIJEJANKOV"."Journal Vaucher Template" ADD CONSTRAINT "FK_JOURNAL _HAS TEMPL_BUSINESS" FOREIGN KEY ("BS_PART_ID")
	  REFERENCES "DIMITRIJEJANKOV"."Business" ("BS_ID") ENABLE;
  ALTER TABLE "DIMITRIJEJANKOV"."Journal Vaucher Template" ADD CONSTRAINT "FK_JOURNAL _TEMPLATE _BUSINESS" FOREIGN KEY ("BS_ID")
	  REFERENCES "DIMITRIJEJANKOV"."Business" ("BS_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table Journal Vaucher Template Entry
--------------------------------------------------------

  ALTER TABLE "DIMITRIJEJANKOV"."Journal Vaucher Template Entry" ADD CONSTRAINT "FK_JOURNAL _BUSSINES _BUSINESS" FOREIGN KEY ("BS_ID")
	  REFERENCES "DIMITRIJEJANKOV"."Business" ("BS_ID") ENABLE;
  ALTER TABLE "DIMITRIJEJANKOV"."Journal Vaucher Template Entry" ADD CONSTRAINT "FK_JOURNAL _VAUCHER T_JOURNAL" FOREIGN KEY ("JVT_ID")
	  REFERENCES "DIMITRIJEJANKOV"."Journal Vaucher Template" ("JVT_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table Software User
--------------------------------------------------------

  ALTER TABLE "DIMITRIJEJANKOV"."Software User" ADD CONSTRAINT "FK_SOFTWARE_BELONGS T_ACCOUNTA" FOREIGN KEY ("SUG_ID")
	  REFERENCES "DIMITRIJEJANKOV"."Accountant User Group" ("SUG_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table Vaucher Entry
--------------------------------------------------------

  ALTER TABLE "DIMITRIJEJANKOV"."Vaucher Entry" ADD CONSTRAINT "FK_VAUCHER _ENTRY FOR_BUSINESS" FOREIGN KEY ("BS_ID")
	  REFERENCES "DIMITRIJEJANKOV"."Business" ("BS_ID") ENABLE;
  ALTER TABLE "DIMITRIJEJANKOV"."Vaucher Entry" ADD CONSTRAINT "FK_VAUCHER _ENTRY IS _VAUCHER" FOREIGN KEY ("SUG_ID", "VET_ID")
	  REFERENCES "DIMITRIJEJANKOV"."Vaucher Entry Type" ("SUG_ID", "VET_ID") ENABLE;
  ALTER TABLE "DIMITRIJEJANKOV"."Vaucher Entry" ADD CONSTRAINT "FK_VAUCHER _JOURNAL V_JOURNAL" FOREIGN KEY ("JV_ID")
	  REFERENCES "DIMITRIJEJANKOV"."Journal Vaucher" ("JV_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table Vaucher Entry Type
--------------------------------------------------------

  ALTER TABLE "DIMITRIJEJANKOV"."Vaucher Entry Type" ADD CONSTRAINT "FK_VAUCHER _GROUP HAS_ACCOUNTA" FOREIGN KEY ("SUG_ID")
	  REFERENCES "DIMITRIJEJANKOV"."Accountant User Group" ("SUG_ID") ENABLE;
--------------------------------------------------------
--  DDL for Trigger TG_MERGE_DELETED_ACCOUNT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "DIMITRIJEJANKOV"."TG_MERGE_DELETED_ACCOUNT" 
BEFORE DELETE ON "Account" FOR EACH ROW
DECLARE
SRC TG_PARENT_ACCOUNT_PACKAGE.ACCOUNT_ID_T;
TRG TG_PARENT_ACCOUNT_PACKAGE.ACCOUNT_ID_T;
BEGIN

  SRC.AC_ID := :OLD.AC_ID;
  SRC.CA_ID := :OLD.CA_ID;

  IF (LENGTH(:OLD.AC_ID) = 3) THEN

    TRG.AC_ID := SUBSTR(:OLD.AC_ID, 1, 2);
    TRG.CA_ID := :OLD.CA_ID;
  
    TG_PARENT_ACCOUNT_PACKAGE.VE_ACC_FK_UPDATE_ENABLED := FALSE;
    PR_MAIN_PACKAGE.PR_REWIRE_JOURNAL_VAUCHER(SRC, TRG);
    PR_MAIN_PACKAGE.PR_REWIRE_JVT(SRC, TRG);
    TG_PARENT_ACCOUNT_PACKAGE.VE_ACC_FK_UPDATE_ENABLED := TRUE;
  
  ELSIF (LENGTH(:OLD.AC_ID) = 2) THEN
  
    
    TG_PARENT_ACCOUNT_PACKAGE.PARENT_ARRAY_COUNT := TG_PARENT_ACCOUNT_PACKAGE.PARENT_ARRAY_COUNT + 1;
    TG_PARENT_ACCOUNT_PACKAGE.PARENT_ARRAY(TG_PARENT_ACCOUNT_PACKAGE.PARENT_ARRAY_COUNT) := SRC;

  END IF;

  
  IF PR_MAIN_PACKAGE.FN_ENTRY_EXISTS(SRC) OR PR_MAIN_PACKAGE.FN_JVT_ENTRY_EXISTS(SRC) THEN
    Raise_Application_Error(-20000, 'This account is referenced!');
  END IF;

END;
/
ALTER TRIGGER "DIMITRIJEJANKOV"."TG_MERGE_DELETED_ACCOUNT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TG_PARTENT_ACCOUNT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "DIMITRIJEJANKOV"."TG_PARTENT_ACCOUNT" 
BEFORE INSERT OR UPDATE OF AC_ID ON "Account"
FOR EACH ROW
DECLARE
ROWS_FOUND NUMBER;

SRC TG_PARENT_ACCOUNT_PACKAGE.ACCOUNT_ID_T;
TRG TG_PARENT_ACCOUNT_PACKAGE.ACCOUNT_ID_T;

BEGIN

  -- the id of an account must be an intiger value 
  IF (PR_MAIN_PACKAGE.IS_NUMBER(:NEW.AC_ID) = 0) THEN
      RAISE_APPLICATION_ERROR(-20003,'Must be a valid integer number');
  END IF;
  
  -- the id of an accoutn must be either two or three digits long
  IF ((LENGTH(:NEW.AC_ID) != 3 AND LENGTH(:NEW.AC_ID) != 2)) THEN
    RAISE_APPLICATION_ERROR(-20003,'The account id is either two or three digits long');
  END IF;

  -- if the account is a child account we need to check if it has a parent account
  IF (LENGTH(:NEW.AC_ID) = 3) THEN

    SRC.AC_ID := SUBSTR(:NEW.AC_ID, 1, 2);
    SRC.CA_ID := :NEW.CA_ID;

    TG_PARENT_ACCOUNT_PACKAGE.ACCOUNT_ARRAY_COUNT := TG_PARENT_ACCOUNT_PACKAGE.ACCOUNT_ARRAY_COUNT + 1;
    TG_PARENT_ACCOUNT_PACKAGE.ACCOUNT_ARRAY(TG_PARENT_ACCOUNT_PACKAGE.ACCOUNT_ARRAY_COUNT) := SRC;
     
  END IF;
  
  IF (LENGTH(:OLD.AC_ID) = 2) AND UPDATING THEN
  
    SRC.AC_ID := :OLD.AC_ID;
    SRC.CA_ID := :OLD.CA_ID;
  
    TG_PARENT_ACCOUNT_PACKAGE.PARENT_ARRAY_COUNT := TG_PARENT_ACCOUNT_PACKAGE.PARENT_ARRAY_COUNT + 1;
    TG_PARENT_ACCOUNT_PACKAGE.PARENT_ARRAY(TG_PARENT_ACCOUNT_PACKAGE.PARENT_ARRAY_COUNT) := SRC;
    
  END IF;
  
  -- if the account is beging updated, all the references to that account need to be updated
  IF UPDATING THEN
  
    SRC.AC_ID := :OLD.AC_ID;
    SRC.CA_ID := :OLD.CA_ID;
    
    TRG.AC_ID := :NEW.AC_ID;
    TRG.CA_ID := :NEW.CA_ID;
  
    TG_PARENT_ACCOUNT_PACKAGE.VE_ACC_FK_UPDATE_ENABLED := FALSE;
    PR_MAIN_PACKAGE.PR_REWIRE_JOURNAL_VAUCHER(SRC, TRG);
    PR_MAIN_PACKAGE.PR_REWIRE_JVT(SRC, TRG);
    TG_PARENT_ACCOUNT_PACKAGE.VE_ACC_FK_UPDATE_ENABLED := TRUE;
    
  END IF;

END;
/
ALTER TRIGGER "DIMITRIJEJANKOV"."TG_PARTENT_ACCOUNT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TG_ST_PARENT_ACCOUNT_AFTER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "DIMITRIJEJANKOV"."TG_ST_PARENT_ACCOUNT_AFTER" 
AFTER INSERT OR UPDATE OR DELETE OF AC_ID ON "Account" 
DECLARE
EXIST_V NUMBER(1);
BEGIN

  FOR i in 1..TG_PARENT_ACCOUNT_PACKAGE.ACCOUNT_ARRAY_COUNT LOOP
    IF NOT(PR_MAIN_PACKAGE.FN_ACCOUNT_EXISTS(TG_PARENT_ACCOUNT_PACKAGE.ACCOUNT_ARRAY(i))) THEN
      Raise_Application_Error(-20000, 'A parent must exist');
    END IF;
  END LOOP;
  
  FOR i in 1..TG_PARENT_ACCOUNT_PACKAGE.PARENT_ARRAY_COUNT LOOP
  
    IF PR_MAIN_PACKAGE.FN_CHILD_ACCOUNT_EXISTS(TG_PARENT_ACCOUNT_PACKAGE.PARENT_ARRAY(i)) THEN
      Raise_Application_Error(-20000, 'A child account exists!');
    END IF;
  END LOOP;
    
END;
/
ALTER TRIGGER "DIMITRIJEJANKOV"."TG_ST_PARENT_ACCOUNT_AFTER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TG_ST_PARENT_ACCOUNT_BEFORE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "DIMITRIJEJANKOV"."TG_ST_PARENT_ACCOUNT_BEFORE" 
BEFORE INSERT OR UPDATE OR DELETE OF AC_ID ON "Account" 
BEGIN
  TG_PARENT_ACCOUNT_PACKAGE.ACCOUNT_ARRAY.DELETE;
  TG_PARENT_ACCOUNT_PACKAGE.ACCOUNT_ARRAY_COUNT := 0;
  
  TG_PARENT_ACCOUNT_PACKAGE.PARENT_ARRAY.DELETE;
  TG_PARENT_ACCOUNT_PACKAGE.PARENT_ARRAY_COUNT := 0;
END;
/
ALTER TRIGGER "DIMITRIJEJANKOV"."TG_ST_PARENT_ACCOUNT_BEFORE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TR_ENTRY_FOR_ACCOUNT_FK
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "DIMITRIJEJANKOV"."TR_ENTRY_FOR_ACCOUNT_FK" 
BEFORE INSERT OR UPDATE OF AC_ID ON "Vaucher Entry" 
FOR EACH ROW 
DECLARE
SRC TG_PARENT_ACCOUNT_PACKAGE.ACCOUNT_ID_T;
BEGIN
  SRC.AC_ID := :NEW.AC_ID;
  SRC.CA_ID := :NEW.CA_ID;

  IF TG_PARENT_ACCOUNT_PACKAGE.VE_ACC_FK_UPDATE_ENABLED AND NOT (PR_MAIN_PACKAGE.FN_ACCOUNT_EXISTS (SRC)) THEN
    Raise_Application_Error (-20000, 'No account with this ID');
  END IF;
END;
/
ALTER TRIGGER "DIMITRIJEJANKOV"."TR_ENTRY_FOR_ACCOUNT_FK" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TR_JVT_ENTRY_FOR_ACCOUNT_FK
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "DIMITRIJEJANKOV"."TR_JVT_ENTRY_FOR_ACCOUNT_FK" 
BEFORE INSERT OR UPDATE OF AC_ID ON "Journal Vaucher Template Entry" 
FOR EACH ROW 
DECLARE
SRC TG_PARENT_ACCOUNT_PACKAGE.ACCOUNT_ID_T;
BEGIN
  SRC.AC_ID := :NEW.AC_ID;
  SRC.CA_ID := :NEW.CA_ID;

  IF TG_PARENT_ACCOUNT_PACKAGE.VE_ACC_FK_UPDATE_ENABLED AND NOT (PR_MAIN_PACKAGE.FN_ACCOUNT_EXISTS (SRC)) THEN
    Raise_Application_Error (-20000, 'No account with this ID');
  END IF;
END;
/
ALTER TRIGGER "DIMITRIJEJANKOV"."TR_JVT_ENTRY_FOR_ACCOUNT_FK" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TR_JV_USER_CON
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "DIMITRIJEJANKOV"."TR_JV_USER_CON" 
BEFORE INSERT OR UPDATE ON "Journal Vaucher" 
FOR EACH ROW 
DECLARE

COUNT_V NUMBER;

BEGIN

SELECT COUNT(*) INTO COUNT_V FROM "Business" b, "BS Has COA" bhc, "Accountant User Group" aug, "Software User" u
WHERE b.BS_ID = bhc.BS_ID AND :NEW.CA_ID=bhc.CA_ID AND b.SUG_ID = aug.SUG_ID AND u.SUG_ID=aug.SUG_ID AND u.SU_ID = :NEW.SU_ID;

IF COUNT_V = 0 THEN
  Raise_Application_Error(-20000, 'User must be a part of Accountant User Group that is managing the business');
END IF;

END;
/
ALTER TRIGGER "DIMITRIJEJANKOV"."TR_JV_USER_CON" ENABLE;
--------------------------------------------------------
--  DDL for Package PR_GL_PACKAGE
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "DIMITRIJEJANKOV"."PR_GL_PACKAGE" AS 

TYPE CA_ARRAY_T IS TABLE OF "Vaucher Entry".CA_ID%TYPE INDEX BY BINARY_INTEGER;

TYPE AC_ARRAY_T IS TABLE OF "Account" % rowtype INDEX BY BINARY_INTEGER;

TYPE VE_ARRAY_T IS TABLE OF "Vaucher Entry"%rowtype INDEX BY BINARY_INTEGER;
TYPE BA_ARRAY_T IS TABLE OF "Vaucher Entry".JVE_DEBITS%TYPE INDEX BY BINARY_INTEGER;

TYPE GL_PAGE_T IS RECORD (acc "Account" % rowtype, ve VE_ARRAY_T, ba BA_ARRAY_T);

TYPE GL_T IS TABLE OF GL_PAGE_T INDEX BY VARCHAR(3);

FUNCTION FN_MERGE_JVE (q IN VE_ARRAY_T, w IN VE_ARRAY_T) RETURN VE_ARRAY_T; 

END PR_GL_PACKAGE;

/
--------------------------------------------------------
--  DDL for Package PR_INCOME_STATMENT_PACKAGE
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "DIMITRIJEJANKOV"."PR_INCOME_STATMENT_PACKAGE" AS 

TYPE VE_T IS TABLE OF "Vaucher Entry"%ROWTYPE INDEX BY BINARY_INTEGER;

TYPE STATMENT_T IS RECORD (CA_ID "Account".CA_ID%TYPE,AC_ID "Account".AC_ID%TYPE,TOTAL "Vaucher Entry".JVE_DEBITS%TYPE);
TYPE STATMENTS_T IS TABLE OF STATMENT_T INDEX BY VARCHAR(3);

TYPE INCOME_STATMENT_T IS RECORD (income STATMENTS_T, loses STATMENTS_T, income_subtotal "Vaucher Entry".JVE_DEBITS%TYPE, loses_subtotal "Vaucher Entry".JVE_DEBITS%TYPE);

END PR_INCOME_STATMENT_PACKAGE;

/
--------------------------------------------------------
--  DDL for Package PR_MAIN_PACKAGE
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "DIMITRIJEJANKOV"."PR_MAIN_PACKAGE" AS 

FUNCTION FN_ACCOUNT_EXISTS(SOURCE IN TG_PARENT_ACCOUNT_PACKAGE.ACCOUNT_ID_T) RETURN BOOLEAN;
FUNCTION FN_CHILD_ACCOUNT_EXISTS(SOURCE IN TG_PARENT_ACCOUNT_PACKAGE.ACCOUNT_ID_T) RETURN BOOLEAN;
FUNCTION FN_ENTRY_EXISTS(SOURCE IN TG_PARENT_ACCOUNT_PACKAGE.ACCOUNT_ID_T) RETURN BOOLEAN;
FUNCTION FN_JVT_ENTRY_EXISTS(SOURCE IN TG_PARENT_ACCOUNT_PACKAGE.ACCOUNT_ID_T) RETURN BOOLEAN;
FUNCTION FN_TABLE_HAS_INDEX(IN_TABLE IN PR_INCOME_STATMENT_PACKAGE.STATMENTS_T, IN_INDEX IN VARCHAR2) RETURN BOOLEAN;
FUNCTION is_number(p_string IN VARCHAR2) RETURN INT;

PROCEDURE PR_DEBTS_TO_LOSES(SRC_CA_ID IN "Account".CA_ID%TYPE);
PROCEDURE PR_GENERAL_LEDGER(BUSINESS_ID IN "Business".BS_ID%TYPE, REPORT OUT PR_GL_PACKAGE.GL_T);
PROCEDURE PR_INCOME_STATMENT(BUSINESS_ID IN "Business".BS_ID%TYPE);

PROCEDURE PR_NEXT_YAER_COPY(ADDITION IN PR_NEXT_YEAR_PACKAGE.ACCOUNTS_T, 
							DELITION IN PR_NEXT_YEAR_PACKAGE.ACCOUNTS_T, 
							SRC_CA_ID IN "Chart of Accounts".CA_ID%TYPE, 
							DST_CA_ID IN "Chart of Accounts".CA_ID%TYPE);

PROCEDURE PR_POPULATE_WITH_TEMPLATE(BUSINESS_ID IN "Business".BS_ID%TYPE,
									FOR_BUSINESS_ID IN "Business".BS_ID%TYPE,
									JOURNAL_VAUCHER_CODE IN "Journal Vaucher".JV_CODE%TYPE,
									DOCUMENT_NUMBER IN "Journal Vaucher".JV_DOCUMENT_NUMBER%TYPE,
									SOFTWARE_USER_ID IN "Software User".SU_ID%TYPE, 
									DATE_OF_RECORDING IN "Journal Vaucher".JV_DATE_OF_RECORDING%TYPE,
									DATE_OF_CURRENCY IN "Journal Vaucher".JV_DATE_OF_CURRENCY%TYPE,
									AMOUNT IN "Vaucher Entry".JVE_DEBITS%TYPE);

PROCEDURE PR_REWIRE_JOURNAL_VAUCHER(SOURCE IN TG_PARENT_ACCOUNT_PACKAGE.ACCOUNT_ID_T, 
									TARGET IN TG_PARENT_ACCOUNT_PACKAGE.ACCOUNT_ID_T);

PROCEDURE PR_REWIRE_JVT(SOURCE IN TG_PARENT_ACCOUNT_PACKAGE.ACCOUNT_ID_T, TARGET IN TG_PARENT_ACCOUNT_PACKAGE.ACCOUNT_ID_T);


END PR_MAIN_PACKAGE;

/
--------------------------------------------------------
--  DDL for Package PR_NEXT_YEAR_PACKAGE
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "DIMITRIJEJANKOV"."PR_NEXT_YEAR_PACKAGE" AS 

TYPE ACCOUNTS_T IS TABLE OF "Account"%ROWTYPE INDEX BY BINARY_INTEGER;

END PR_NEXT_YEAR_PACKAGE;

/
--------------------------------------------------------
--  DDL for Package TG_PARENT_ACCOUNT_PACKAGE
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "DIMITRIJEJANKOV"."TG_PARENT_ACCOUNT_PACKAGE" IS


TYPE ACCOUNT_ID_T IS RECORD (AC_ID "Account".AC_ID%TYPE, CA_ID "Account".CA_ID%TYPE);
TYPE ACCOUNT_ARRAY_T IS TABLE OF ACCOUNT_ID_T INDEX BY BINARY_INTEGER;

ACCOUNT_ARRAY ACCOUNT_ARRAY_T;
ACCOUNT_ARRAY_COUNT NUMBER(4) := 0;

PARENT_ARRAY ACCOUNT_ARRAY_T;
PARENT_ARRAY_COUNT NUMBER(4) := 0;

VE_ACC_FK_UPDATE_ENABLED BOOLEAN := TRUE;

END TG_PARENT_ACCOUNT_PACKAGE;

/
--------------------------------------------------------
--  DDL for Package Body PR_GL_PACKAGE
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "DIMITRIJEJANKOV"."PR_GL_PACKAGE" AS

  FUNCTION FN_MERGE_JVE (q IN VE_ARRAY_T, w IN VE_ARRAY_T) RETURN VE_ARRAY_T AS
  tmp VE_ARRAY_T;
  BEGIN
  
    FOR idx in 1..q.COUNT LOOP
        tmp(idx) := q(idx);
    END LOOP;
    
    FOR jdx in 1..w.COUNT LOOP
        tmp(jdx + q.COUNT) := w(jdx);
    END LOOP;
  
    RETURN tmp;
  END FN_MERGE_JVE;

END PR_GL_PACKAGE;

/
--------------------------------------------------------
--  DDL for Package Body PR_MAIN_PACKAGE
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "DIMITRIJEJANKOV"."PR_MAIN_PACKAGE" AS

FUNCTION FN_ACCOUNT_EXISTS(SOURCE IN TG_PARENT_ACCOUNT_PACKAGE.ACCOUNT_ID_T)
RETURN BOOLEAN IS
ENT_COUNT NUMBER(6);
BEGIN
  SELECT COUNT(*) INTO ENT_COUNT FROM "Account" a WHERE a.AC_ID = SOURCE.AC_ID AND a.CA_ID=SOURCE.CA_ID;
  IF ENT_COUNT = 0 THEN
    RETURN FALSE;
  ELSE
    RETURN TRUE;
  END IF;
END FN_ACCOUNT_EXISTS;

FUNCTION FN_CHILD_ACCOUNT_EXISTS(SOURCE IN TG_PARENT_ACCOUNT_PACKAGE.ACCOUNT_ID_T)
RETURN BOOLEAN IS
ENT_COUNT NUMBER(6);
BEGIN
  SELECT COUNT(*) INTO ENT_COUNT FROM "Account" a WHERE a.AC_ID LIKE (SOURCE.AC_ID || '_') AND a.CA_ID=SOURCE.CA_ID;
  IF ENT_COUNT = 0 THEN
    RETURN FALSE;
  ELSE
    RETURN TRUE;
  END IF;
END FN_CHILD_ACCOUNT_EXISTS;

FUNCTION FN_ENTRY_EXISTS(SOURCE IN TG_PARENT_ACCOUNT_PACKAGE.ACCOUNT_ID_T)
RETURN BOOLEAN IS
ENT_COUNT NUMBER(6);
BEGIN
  SELECT COUNT(*) INTO ENT_COUNT FROM "Vaucher Entry" v WHERE v.AC_ID = SOURCE.AC_ID AND v.CA_ID=SOURCE.CA_ID;
  IF ENT_COUNT = 0 THEN
    RETURN FALSE;
  ELSE
    RETURN TRUE;
  END IF;
END FN_ENTRY_EXISTS;

FUNCTION FN_JVT_ENTRY_EXISTS(SOURCE IN TG_PARENT_ACCOUNT_PACKAGE.ACCOUNT_ID_T)
RETURN BOOLEAN IS
ENT_COUNT NUMBER(6);
BEGIN
  SELECT COUNT(*) INTO ENT_COUNT FROM "Journal Vaucher Template Entry" v WHERE v.AC_ID = SOURCE.AC_ID AND v.CA_ID=SOURCE.CA_ID;
  IF ENT_COUNT = 0 THEN
    RETURN FALSE;
  ELSE
    RETURN TRUE;
  END IF;
END FN_JVT_ENTRY_EXISTS;

FUNCTION FN_TABLE_HAS_INDEX 
(IN_TABLE IN PR_INCOME_STATMENT_PACKAGE.STATMENTS_T, IN_INDEX IN VARCHAR2) RETURN BOOLEAN AS 
STATMENT PR_INCOME_STATMENT_PACKAGE.STATMENT_T;
BEGIN
  STATMENT := IN_TABLE(IN_INDEX);
  RETURN TRUE;
EXCEPTION
WHEN OTHERS THEN
   RETURN FALSE;
END FN_TABLE_HAS_INDEX;

FUNCTION is_number (p_string IN VARCHAR2)
   RETURN INT
IS
   v_new_num NUMBER;
BEGIN
   v_new_num := TO_NUMBER(p_string, '999');
   RETURN 1;
EXCEPTION
WHEN VALUE_ERROR THEN
   RETURN 0;
END is_number;

PROCEDURE PR_DEBTS_TO_LOSES 
(SRC_CA_ID IN "Account".CA_ID%TYPE) AS 

ACCOUNTS TG_PARENT_ACCOUNT_PACKAGE.ACCOUNT_ARRAY_T;

DST TG_PARENT_ACCOUNT_PACKAGE.ACCOUNT_ID_T;

BEGIN
  -- Transfer all the entries for the loses (351) of this year to the cumulative loses (350)
  SELECT a.AC_ID, a.CA_ID 
  BULK COLLECT INTO ACCOUNTS 
  FROM "Account" a 
  WHERE a.CA_ID=SRC_CA_ID AND a.CA_ID = '351';
  
  DST.CA_ID := SRC_CA_ID;
  DST.AC_ID := '350';
  
  FOR idx in 1..ACCOUNTS.COUNT LOOP
    PR_REWIRE_JOURNAL_VAUCHER(ACCOUNTS(idx), DST);
  END LOOP;
  
  -- Transfer the unpaid captial (00 or 31) to the loses for the current year (351) 
  SELECT a.AC_ID, a.CA_ID 
  BULK COLLECT INTO ACCOUNTS 
  FROM "Account" a WHERE 
  a.CA_ID=SRC_CA_ID AND (a.AC_ID LIKE '00%' OR a.AC_ID LIKE '31%');
  
  DST.CA_ID := SRC_CA_ID;
  DST.AC_ID := '351';

  FOR idx in 1..ACCOUNTS.COUNT LOOP
    PR_REWIRE_JOURNAL_VAUCHER(ACCOUNTS(idx), DST);
  END LOOP;
  
END PR_DEBTS_TO_LOSES;

PROCEDURE PR_GENERAL_LEDGER (
  BUSINESS_ID IN "Business".BS_ID%TYPE,
  REPORT OUT PR_GL_PACKAGE.GL_T) AS

CA_ARRAY PR_GL_PACKAGE.CA_ARRAY_T;
AC_ARRAY PR_GL_PACKAGE.AC_ARRAY_T;
VE_ARRAY PR_GL_PACKAGE.VE_ARRAY_T;

TEMP "Vaucher Entry".JVE_DEBITS%TYPE;

PAGE PR_GL_PACKAGE.GL_PAGE_T;

BEGIN
  
  SELECT bhc.CA_ID BULK COLLECT INTO CA_ARRAY FROM "BS Has COA" bhc WHERE bhc.BS_ID=BUSINESS_ID;
  
  FOR idx in 1..CA_ARRAY.COUNT LOOP
  
    SELECT * BULK COLLECT INTO AC_ARRAY FROM "Account" a WHERE a.CA_ID=CA_ARRAY(idx);
    
    FOR jdx in 1..AC_ARRAY.COUNT LOOP

      REPORT(AC_ARRAY(jdx).AC_ID).ACC := AC_ARRAY(jdx);
      
      SELECT * BULK COLLECT INTO VE_ARRAY FROM "Vaucher Entry" v WHERE v.CA_ID=CA_ARRAY(idx) and v.AC_ID=AC_ARRAY(jdx).AC_ID;
      
      REPORT(AC_ARRAY(jdx).AC_ID).VE := PR_GL_PACKAGE.FN_MERGE_JVE(REPORT(AC_ARRAY(jdx).AC_ID).VE, VE_ARRAY);
    
    END LOOP;
  
  END LOOP;
  
  SELECT * BULK COLLECT INTO AC_ARRAY FROM "Account" a WHERE a.CA_ID in (SELECT bhc.CA_ID FROM "BS Has COA" bhc WHERE bhc.BS_ID=BUSINESS_ID);
  
  FOR idx in 1..AC_ARRAY.COUNT LOOP

    TEMP := 0;
  
    FOR kdx in 1..REPORT(AC_ARRAY(idx).AC_ID).VE.COUNT LOOP
    
      TEMP := TEMP + REPORT(AC_ARRAY(idx).AC_ID).VE(kdx).JVE_DEBITS - REPORT(AC_ARRAY(idx).AC_ID).VE(kdx).JVE_CREDITS;
      REPORT(AC_ARRAY(idx).AC_ID).BA(kdx) := TEMP;
    
    END LOOP;
  
  END LOOP;
  
END PR_GENERAL_LEDGER;

PROCEDURE PR_INCOME_STATMENT
(BUSINESS_ID IN "Business".BS_ID%TYPE) AS 

INCOME_STATMENT PR_INCOME_STATMENT_PACKAGE.INCOME_STATMENT_T;
VAUCHER_ENTRIES PR_INCOME_STATMENT_PACKAGE.VE_T;

TEMP PR_INCOME_STATMENT_PACKAGE.STATMENT_T;

BEGIN
  
  SELECT v.JVE_ID, v.JV_ID, v.SUG_ID, v.VET_ID, v.BS_ID, v.CA_ID, v.AC_ID, v.JVE_DESCRIPTION, v.JVE_DEBITS, v.JVE_CREDITS 
         BULK COLLECT INTO VAUCHER_ENTRIES
         FROM "Vaucher Entry" v, "BS Has COA" bhc
         WHERE v.CA_ID=bhc.CA_ID and bhc.BS_ID=BUSINESS_ID;

  INCOME_STATMENT.income_subtotal := 0;
  INCOME_STATMENT.loses_subtotal := 0;
  
  FOR idx in 1..VAUCHER_ENTRIES.COUNT LOOP
  
    IF SUBSTR(VAUCHER_ENTRIES(idx).AC_ID, 1 , 1) = '5' THEN
      
      IF FN_TABLE_HAS_INDEX(INCOME_STATMENT.INCOME, VAUCHER_ENTRIES(idx).AC_ID) THEN
        INCOME_STATMENT.INCOME(VAUCHER_ENTRIES(idx).AC_ID).TOTAL := INCOME_STATMENT.INCOME(VAUCHER_ENTRIES(idx).AC_ID).TOTAL + (VAUCHER_ENTRIES(idx).JVE_CREDITS-VAUCHER_ENTRIES(idx).JVE_DEBITS);
      ELSE
        INCOME_STATMENT.INCOME(VAUCHER_ENTRIES(idx).AC_ID).AC_ID := VAUCHER_ENTRIES(idx).AC_ID;
        INCOME_STATMENT.INCOME(VAUCHER_ENTRIES(idx).AC_ID).CA_ID := VAUCHER_ENTRIES(idx).CA_ID;
        INCOME_STATMENT.INCOME(VAUCHER_ENTRIES(idx).AC_ID).TOTAL := VAUCHER_ENTRIES(idx).JVE_CREDITS-VAUCHER_ENTRIES(idx).JVE_DEBITS;
      END IF;
      
      INCOME_STATMENT.income_subtotal := INCOME_STATMENT.income_subtotal + (VAUCHER_ENTRIES(idx).JVE_CREDITS-VAUCHER_ENTRIES(idx).JVE_DEBITS);
    
    ELSIF SUBSTR(VAUCHER_ENTRIES(idx).AC_ID, 1 , 1) = '6' THEN
      IF FN_TABLE_HAS_INDEX(INCOME_STATMENT.LOSES, VAUCHER_ENTRIES(idx).AC_ID) THEN
        INCOME_STATMENT.LOSES(VAUCHER_ENTRIES(idx).AC_ID).TOTAL := INCOME_STATMENT.LOSES(VAUCHER_ENTRIES(idx).AC_ID).TOTAL + (VAUCHER_ENTRIES(idx).JVE_CREDITS-VAUCHER_ENTRIES(idx).JVE_DEBITS);
      ELSE
        INCOME_STATMENT.LOSES(VAUCHER_ENTRIES(idx).AC_ID).AC_ID := VAUCHER_ENTRIES(idx).AC_ID;
        INCOME_STATMENT.LOSES(VAUCHER_ENTRIES(idx).AC_ID).CA_ID := VAUCHER_ENTRIES(idx).CA_ID;
        INCOME_STATMENT.LOSES(VAUCHER_ENTRIES(idx).AC_ID).TOTAL := VAUCHER_ENTRIES(idx).JVE_CREDITS-VAUCHER_ENTRIES(idx).JVE_DEBITS;
      END IF;
      
      INCOME_STATMENT.loses_subtotal := INCOME_STATMENT.loses_subtotal + (VAUCHER_ENTRIES(idx).JVE_CREDITS-VAUCHER_ENTRIES(idx).JVE_DEBITS);
    
    END IF;
  END LOOP;
  
END PR_INCOME_STATMENT;

PROCEDURE PR_NEXT_YAER_COPY
(ADDITION IN PR_NEXT_YEAR_PACKAGE.ACCOUNTS_T, 
 DELITION IN PR_NEXT_YEAR_PACKAGE.ACCOUNTS_T,
 SRC_CA_ID IN "Chart of Accounts".CA_ID%TYPE,
 DST_CA_ID IN "Chart of Accounts".CA_ID%TYPE) AS 

OLD_CA PR_NEXT_YEAR_PACKAGE.ACCOUNTS_T;
CA "Chart of Accounts"%ROWTYPE;

BEGIN
  
  SELECT DST_CA_ID, CA_DESCRIPTION, CA_YEAR+1 
  INTO CA
  FROM "Chart of Accounts" coa 
  WHERE coa.CA_ID=SRC_CA_ID;
  
  INSERT INTO "Chart of Accounts" (CA_ID, CA_DESCRIPTION, CA_YEAR) 
  VALUES (CA.CA_ID, CA.CA_DESCRIPTION, CA.CA_YEAR);
  
  SELECT DST_CA_ID, a.AC_ID, a.AC_NAME 
  BULK COLLECT INTO OLD_CA 
  FROM "Account" a 
  WHERE a.CA_ID=SRC_CA_ID;
  
  FORALL indx IN 1..OLD_CA.COUNT 
  INSERT INTO "Account" (CA_ID, AC_ID, AC_NAME)
  VALUES (OLD_CA(indx).CA_ID, OLD_CA(indx).AC_ID, OLD_CA(indx).AC_NAME);
  
  FORALL indx IN 1..DELITION.COUNT 
  DELETE FROM "Account" a
  WHERE a.AC_ID=DELITION(indx).AC_ID AND a.CA_ID=DST_CA_ID;
  
  FORALL indx IN 1..ADDITION.COUNT 
  INSERT INTO "Account" (CA_ID, AC_ID, AC_NAME)
  VALUES (DST_CA_ID, ADDITION(indx).AC_ID, ADDITION(indx).AC_NAME);
  
END PR_NEXT_YAER_COPY;

PROCEDURE PR_POPULATE_WITH_TEMPLATE
(BUSINESS_ID IN "Business".BS_ID%TYPE,
 FOR_BUSINESS_ID IN "Business".BS_ID%TYPE,
 JOURNAL_VAUCHER_CODE IN "Journal Vaucher".JV_CODE%TYPE,
 DOCUMENT_NUMBER IN "Journal Vaucher".JV_DOCUMENT_NUMBER%TYPE,
 SOFTWARE_USER_ID IN "Software User".SU_ID%TYPE, 
 DATE_OF_RECORDING IN "Journal Vaucher".JV_DATE_OF_RECORDING%TYPE,
 DATE_OF_CURRENCY IN "Journal Vaucher".JV_DATE_OF_CURRENCY%TYPE,
 AMOUNT IN "Vaucher Entry".JVE_DEBITS%TYPE) AS
 
TYPE jvts_t IS TABLE OF "Journal Vaucher Template Entry"%ROWTYPE INDEX BY BINARY_INTEGER;
 
jvt "Journal Vaucher Template"%ROWTYPE;
jvts jvts_t;

jv_id "Journal Vaucher".JV_ID%TYPE;

CHART_OF_ACCOUNTS "Chart of Accounts".CA_ID%TYPE;
SOFTWARE_USER_GROUP "Accountant User Group".SUG_ID%TYPE;

BEGIN

  SELECT * INTO jvt FROM "Journal Vaucher Template" vt 
                    WHERE vt.BS_ID=BUSINESS_ID AND vt.BS_PART_ID=FOR_BUSINESS_ID;  

  SELECT * BULK COLLECT INTO jvts FROM "Journal Vaucher Template Entry" vte WHERE vte.JVT_ID=jvt.JVT_ID;

  SELECT ca.CA_ID INTO CHART_OF_ACCOUNTS FROM "Chart of Accounts" ca, "BS Has COA" bhc 
  WHERE ca.CA_ID=bhc.CA_ID AND bhc.BS_ID=BUSINESS_ID AND 
  ca.CA_YEAR=(SELECT MAX(caa.CA_YEAR) FROM "Chart of Accounts" caa, "BS Has COA" bhc WHERE caa.CA_ID=bhc.CA_ID AND bhc.BS_ID=BUSINESS_ID);

  jv_id := JOURNAL_VAUCHER_SEQUENCER.NEXTVAL;

  INSERT INTO "Journal Vaucher" (JV_ID, CA_ID, SU_ID, JV_CODE, JV_DOCUMENT_NUMBER, JV_DATE_OF_RECORDING, JV_DATE_OF_CURRENCY)
  VALUES (jv_id, CHART_OF_ACCOUNTS, SOFTWARE_USER_ID, JOURNAL_VAUCHER_CODE, DOCUMENT_NUMBER, DATE_OF_RECORDING, DATE_OF_CURRENCY);
  
  DBMS_OUTPUT.PUT_LINE(TO_Char(SQL%ROWCOUNT)||' rows affected.');

  SELECT su.SUG_ID INTO SOFTWARE_USER_GROUP FROM "Software User" su WHERE su.SU_ID=SOFTWARE_USER_ID;

  FOR idx in 1..jvts.COUNT LOOP
    
    INSERT INTO "Vaucher Entry" (JVE_ID, JV_ID, SUG_ID, VET_ID, BS_ID, CA_ID, AC_ID, JVE_DESCRIPTION, JVE_DEBITS, JVE_CREDITS)
    VALUES(VAUCHER_ENTRY_SEQUENCER.NEXTVAL, jv_id, SOFTWARE_USER_GROUP, NULL, jvts(idx).BS_ID, jvts(idx).CA_ID, jvts(idx).AC_ID, jvts(idx).JVTE_DESCRIPTION, jvts(idx).JVTE_DEBITS*AMOUNT/100, jvts(idx).JVTE_CREDITS*AMOUNT/100);
    
    DBMS_OUTPUT.PUT_LINE(TO_Char(SQL%ROWCOUNT)||' rows affected.');
    
  END LOOP;

EXCEPTION
   WHEN OTHERS THEN ROLLBACK;

END PR_POPULATE_WITH_TEMPLATE;

PROCEDURE PR_REWIRE_JOURNAL_VAUCHER 
(SOURCE IN TG_PARENT_ACCOUNT_PACKAGE.ACCOUNT_ID_T, 
 TARGET IN TG_PARENT_ACCOUNT_PACKAGE.ACCOUNT_ID_T) AS 
BEGIN
  UPDATE "Vaucher Entry" v SET v.AC_ID=TARGET.AC_ID WHERE 
  v.AC_ID=SOURCE.AC_ID AND v.CA_ID=SOURCE.CA_ID;
END PR_REWIRE_JOURNAL_VAUCHER;

PROCEDURE PR_REWIRE_JVT
(SOURCE IN TG_PARENT_ACCOUNT_PACKAGE.ACCOUNT_ID_T, 
 TARGET IN TG_PARENT_ACCOUNT_PACKAGE.ACCOUNT_ID_T) AS 
BEGIN
  UPDATE "Journal Vaucher Template Entry" v SET v.AC_ID=TARGET.AC_ID WHERE 
  v.AC_ID=SOURCE.AC_ID AND v.CA_ID=SOURCE.CA_ID;
END PR_REWIRE_JVT;

END PR_MAIN_PACKAGE;

/
