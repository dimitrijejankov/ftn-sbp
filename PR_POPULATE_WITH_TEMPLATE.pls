create or replace PROCEDURE PR_POPULATE_WITH_TEMPLATE
(BUSINESS_ID IN "Business".BS_ID%TYPE,
 FOR_BUSINESS_ID IN "Business".BS_ID%TYPE,
 JOURNAL_VAUCHER_CODE IN "Journal Vaucher".JV_CODE%TYPE,
 DOCUMENT_NUMBER IN "Journal Vaucher".JV_DOCUMENT_NUMBER%TYPE,
 SOFTWARE_USER_ID IN "Software User".SU_ID%TYPE, 
 DATE_OF_RECORDING IN "Journal Vaucher".JV_DATE_OF_RECORDING%TYPE,
 DATE_OF_CURRENCY IN "Journal Vaucher".JV_DATE_OF_CURRENCY%TYPE,
 AMOUNT IN "Vaucher Entry".JVE_DEBITS%TYPE) AS
 
TYPE jvts_t IS TABLE OF "Journal Vaucher Template Entry"%ROWTYPE INDEX BY BINARY_INTEGER;
 
jvt "Journal Vaucher Template"%ROWTYPE;
jvts jvts_t;

jv_id "Journal Vaucher".JV_ID%TYPE;

CHART_OF_ACCOUNTS "Chart of Accounts".CA_ID%TYPE;
SOFTWARE_USER_GROUP "Accountant User Group".SUG_ID%TYPE;

BEGIN

  SELECT * INTO jvt FROM "Journal Vaucher Template" vt 
                    WHERE vt.BS_ID=BUSINESS_ID AND vt.BS_PART_ID=FOR_BUSINESS_ID;  

  SELECT * BULK COLLECT INTO jvts FROM "Journal Vaucher Template Entry" vte WHERE vte.JVT_ID=jvt.JVT_ID;

  SELECT ca.CA_ID INTO CHART_OF_ACCOUNTS FROM "Chart of Accounts" ca, "BS Has COA" bhc 
  WHERE ca.CA_ID=bhc.CA_ID AND bhc.BS_ID=BUSINESS_ID AND 
  ca.CA_YEAR=(SELECT MAX(caa.CA_YEAR) FROM "Chart of Accounts" caa, "BS Has COA" bhc WHERE caa.CA_ID=bhc.CA_ID AND bhc.BS_ID=BUSINESS_ID);

  jv_id := JOURNAL_VAUCHER_SEQUENCER.NEXTVAL;

  INSERT INTO "Journal Vaucher" (JV_ID, CA_ID, SU_ID, JV_CODE, JV_DOCUMENT_NUMBER, JV_DATE_OF_RECORDING, JV_DATE_OF_CURRENCY)
  VALUES (jv_id, CHART_OF_ACCOUNTS, SOFTWARE_USER_ID, JOURNAL_VAUCHER_CODE, DOCUMENT_NUMBER, DATE_OF_RECORDING, DATE_OF_CURRENCY);
  
  DBMS_OUTPUT.PUT_LINE(TO_Char(SQL%ROWCOUNT)||' rows affected.');

  SELECT su.SUG_ID INTO SOFTWARE_USER_GROUP FROM "Software User" su WHERE su.SU_ID=SOFTWARE_USER_ID;

  FOR idx in 1..jvts.COUNT LOOP
    
    INSERT INTO "Vaucher Entry" (JVE_ID, JV_ID, SUG_ID, VET_ID, BS_ID, CA_ID, AC_ID, JVE_DESCRIPTION, JVE_DEBITS, JVE_CREDITS)
    VALUES(VAUCHER_ENTRY_SEQUENCER.NEXTVAL, jv_id, SOFTWARE_USER_GROUP, NULL, jvts(idx).BS_ID, jvts(idx).CA_ID, jvts(idx).AC_ID, jvts(idx).JVTE_DESCRIPTION, jvts(idx).JVTE_DEBITS*AMOUNT/100, jvts(idx).JVTE_CREDITS*AMOUNT/100);
    
    DBMS_OUTPUT.PUT_LINE(TO_Char(SQL%ROWCOUNT)||' rows affected.');
    
  END LOOP;

EXCEPTION
   WHEN OTHERS THEN ROLLBACK;

END PR_POPULATE_WITH_TEMPLATE;